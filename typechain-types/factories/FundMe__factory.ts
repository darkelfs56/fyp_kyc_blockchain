/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FundMe, FundMeInterface } from "../FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_addressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_funders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_priceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108ca3803806108ca83398101604081905261002f9161005d565b600380546001600160a01b039092166001600160a01b0319928316179055600280549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b61082e8061009c6000396000f3fe60806040526004361061007b5760003560e01c806354861af71161004e57806354861af714610117578063b60d428814610137578063be2693f01461013f578063e39782401461014757600080fd5b80630d8e6e2c146100805780630ec3b027146100a85780631bf6132d146100e05780633ccfd60b1461010d575b600080fd5b34801561008c57600080fd5b50610095610167565b6040519081526020015b60405180910390f35b3480156100b457600080fd5b506003546100c8906001600160a01b031681565b6040516001600160a01b03909116815260200161009f565b3480156100ec57600080fd5b506100956100fb366004610609565b60006020819052908152604090205481565b6101156101e9565b005b34801561012357600080fd5b506100c8610132366004610632565b6102a4565b6101156102ce565b6101156103ac565b34801561015357600080fd5b506002546100c8906001600160a01b031681565b6003546040805163054fd4d560e41b815290516000926001600160a01b0316916354fd4d50916004808301926020929190829003018186803b1580156101ac57600080fd5b505afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e4919061064b565b905090565b6002546001600160a01b0316331461020057600080fd5b60405133904780156108fc02916000818181858888f1935050505015801561022c573d6000803e3d6000fd5b5060005b6001548110156102835760006001828154811061024f5761024f610664565b60009182526020808320909101546001600160a01b031682528190526040812055508061027b81610690565b915050610230565b5060408051600081526020810191829052516102a19160019161058f565b50565b600181815481106102b457600080fd5b6000918252602090912001546001600160a01b0316905081565b6003546802b5e3af16b18800009081906102f29034906001600160a01b03166104c7565b10156103445760405162461bcd60e51b815260206004820152601b60248201527f596f75206e65656420746f207370656e64206d6f726520455448210000000000604482015260640160405180910390fd5b33600090815260208190526040812080543492906103639084906106ab565b90915550506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319163317905550565b6002546001600160a01b031633146103c357600080fd5b60405133904780156108fc02916000818181858888f193505050501580156103ef573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561044857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161042a575b5050505050905060005b81518110156104a557600082828151811061046f5761046f610664565b6020908102919091018101516001600160a01b03166000908152908190526040812055508061049d81610690565b915050610452565b5060408051600081526020810191829052516104c39160019161058f565b5050565b6000806104d3836104fd565b90506000670de0b6b3a76400006104ea86846106c3565b6104f491906106e2565b95945050505050565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561053957600080fd5b505afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105719190610723565b505050915050806402540be4006105889190610773565b9392505050565b8280548282559060005260206000209081019282156105e4579160200282015b828111156105e457825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906105af565b506105f09291506105f4565b5090565b5b808211156105f057600081556001016105f5565b60006020828403121561061b57600080fd5b81356001600160a01b038116811461058857600080fd5b60006020828403121561064457600080fd5b5035919050565b60006020828403121561065d57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156106a4576106a461067a565b5060010190565b600082198211156106be576106be61067a565b500190565b60008160001904831182151516156106dd576106dd61067a565b500290565b6000826106ff57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461071e57600080fd5b919050565b600080600080600060a0868803121561073b57600080fd5b61074486610704565b945060208601519350604086015192506060860151915061076760808701610704565b90509295509295909350565b60006001600160ff1b03818413828413808216868404861116156107995761079961067a565b600160ff1b60008712828116878305891216156107b8576107b861067a565b600087129250878205871284841616156107d4576107d461067a565b878505871281841616156107ea576107ea61067a565b50505092909302939250505056fea26469706673582212204db56d389f3595ccc74b445e87840997aefd9b3f4db875f965e010aeb0e7f47c64736f6c63430008090033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FundMe";
  }

  deploy(
    priceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FundMe> {
    return super.deploy(priceFeed, overrides || {}) as Promise<FundMe>;
  }
  getDeployTransaction(
    priceFeed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(priceFeed, overrides || {});
  }
  attach(address: string): FundMe {
    return super.attach(address) as FundMe;
  }
  connect(signer: Signer): FundMe__factory {
    return super.connect(signer) as FundMe__factory;
  }
  static readonly contractName: "FundMe";
  public readonly contractName: "FundMe";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new utils.Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FundMe {
    return new Contract(address, _abi, signerOrProvider) as FundMe;
  }
}
